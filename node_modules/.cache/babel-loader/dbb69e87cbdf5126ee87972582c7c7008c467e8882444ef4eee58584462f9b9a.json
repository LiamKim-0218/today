{"ast":null,"code":"var _jsxFileName = \"C:\\\\whattowatchtoday\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport Google from \"../components/Google.jsx\";\nimport Facebook from \"../components/Facebook.jsx\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  // const history = useHistory();\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:3100/users/login\", {\n        username,\n        password\n      });\n      console.log(response.data);\n      if (response.data.success) {\n        console.log(\"로그인 성공!\");\n        // 로그인 성공 후 처리할 로직 작성\n        navigate(\"/MyPage\"); // 내 정보 페이지로 이동\n      } else {\n        setErrorMessage(response.data.message);\n      }\n    } catch (error) {\n      console.error(\"로그인 요청 실패:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginContainer, {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(LoginTitle, {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n        type: \"text\",\n        placeholder: \"Email ID\",\n        value: username,\n        onChange: handleUsernameChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: handlePasswordChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Google, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Facebook, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(LoginButton, {\n        type: \"submit\",\n        onSubmit: handleSubmit,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(LoginErrorMessage, {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OcEh96ookApaGYrUhZcJPgbvkKE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nconst LoginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #000;\n  height: 100vh;\n`;\n_c2 = LoginContainer;\nconst LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #5a5858;\n  padding: 30px;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n`;\n_c3 = LoginForm;\nconst LoginInput = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  font-size: 16px;\n  &:focus {\n    outline: none;\n    border-color: #007bff;\n  }\n`;\n_c4 = LoginInput;\nconst LoginButton = styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 3px;\n  background-color: #2e2e2e;\n  color: #fff;\n  font-size: 16px;\n  cursor: pointer;\n`;\n_c5 = LoginButton;\nconst LoginTitle = styled.h1`\n  margin-bottom: 30px;\n  font-size: 24px;\n  font-weight: bold;\n`;\n_c6 = LoginTitle;\nconst LoginErrorMessage = styled.p`\n  margin-top: 10px;\n  color: #dc3545;\n  font-size: 14px;\n`;\n_c7 = LoginErrorMessage;\nexport default Login;\n\n// import React from 'react';\n// import styled from 'styled-components';\n\n// const Login = () => {\n//   return (\n//     <LoginContainer>\n//       <LoginForm>\n//         <LoginTitle>로그인</LoginTitle>\n//         <LoginInput\n//           type=\"text\"\n//           placeholder=\"사용자 이름\"\n//           required\n//         />\n//         <LoginInput\n//           type=\"password\"\n//           placeholder=\"비밀번호\"\n//           required\n//         />\n//         <LoginButton>로그인</LoginButton>\n//       </LoginForm>\n//     </LoginContainer>\n//   );\n// };\n\n// const LoginContainer = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   height: 100vh;\n// `;\n\n// const LoginForm = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n//   width: 400px;\n//   background-color: #fff;\n//   padding: 30px;\n//   border-radius: 5px;\n//   box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n// `;\n\n// const LoginInput = styled.input`\n//   width: 100%;\n//   padding: 10px;\n//   margin-bottom: 10px;\n//   border: 1px solid #ccc;\n//   border-radius: 3px;\n//   font-size: 16px;\n//   &:focus {\n//     outline: none;\n//     border-color: #007bff;\n//   }\n// `;\n\n// const LoginButton = styled.button`\n//   padding: 10px 20px;\n//   border: none;\n//   border-radius: 3px;\n//   background-color: #007bff;\n//   color: #fff;\n//   font-size: 16px;\n//   cursor: pointer;\n// `;\n\n// const LoginTitle = styled.h1`\n//   margin-bottom: 30px;\n//   font-size: 24px;\n//   font-weight: bold;\n// `;\n\n// export default Login;\n\n// function onClickGooglelogin() {\n//   document.querySelector('[aria-labelledby=\"button-label\"]').click();\n// }\n\n// <button onClick={onClickGooglelogin}> Login </button>\n// //로그인 버튼 아직 미완성\n\n// import React, { useState } from 'react';\n// import styled from 'styled-components';\n// import { useHistory } from 'react-router-dom';\n// import Google from 'C:/Users/namkyun/Desktop/workspace/today/src/components/Google.jsx';\n// import Facebook from 'C:/Users/namkyun/Desktop/workspace/today/src/components/Facebook.jsx';\n\n// const Login = () => {\n//   const history = useHistory(); // useHistory 훅 사용\n\n//   // ...이전 코드 생략...\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     // 여기서 서버에 로그인 요청을 보내고 결과를 처리할 수 있습니다.\n//     if (username === 'admin' && password === 'admin') {\n//       console.log('로그인 성공!');\n//       setErrorMessage('');\n\n//       // 로그인 성공 후 내 정보 페이지로 이동\n//       history.push('/profile');\n//     } else {\n//       setErrorMessage('유효하지 않은 사용자 이름 또는 비밀번호입니다.');\n//     }\n//   };\n\n//   // ...이전 코드 생략...\n\n//   return (\n//     // ...이전 코드 생략...\n//   );\n// };\n\n// // ...이후 코드 생략...\n\n// import React, { useState } from 'react';\n// import styled from 'styled-components';\n// import { useHistory } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n// import Google from 'C:/Users/namkyun/Desktop/workspace/today/src/components/Google.jsx';\n// import Facebook from 'C:/Users/namkyun/Desktop/workspace/today/src/components/Facebook.jsx';\n\n// import axios from 'axios';\n\n// const Login = () => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const navigate = useNavigate(); navigate('/ProfileLogin')\n//   const history = useHistory();\n\n//   const handleUsernameChange = (event) => {\n//     setUsername(event.target.value);\n//   };\n\n//   const handlePasswordChange = (event) => {\n//     setPassword(event.target.value);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     // 여기서 서버에 로그인 요청을 보내고 결과를 처리할 수 있습니다.\n//     if (username === 'admin' && password === 'admin') {\n//       console.log('로그인 성공!');\n//       setErrorMessage('');\n\n//       // 로그인 성공 후 내 정보 페이지로 이동\n//       history.push('/profile');\n//     } else {\n//       setErrorMessage('유효하지 않은 사용자 이름 또는 비밀번호입니다.');\n//     }\n//   };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"LoginContainer\");\n$RefreshReg$(_c3, \"LoginForm\");\n$RefreshReg$(_c4, \"LoginInput\");\n$RefreshReg$(_c5, \"LoginButton\");\n$RefreshReg$(_c6, \"LoginTitle\");\n$RefreshReg$(_c7, \"LoginErrorMessage\");","map":{"version":3,"names":["React","useState","styled","useHistory","useNavigate","Google","Facebook","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","handleUsernameChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","response","post","console","log","data","success","message","error","LoginContainer","children","LoginForm","onSubmit","LoginTitle","fileName","_jsxFileName","lineNumber","columnNumber","LoginInput","type","placeholder","onChange","required","LoginButton","LoginErrorMessage","_c","div","_c2","form","_c3","input","_c4","button","_c5","h1","_c6","p","_c7","$RefreshReg$"],"sources":["C:/whattowatchtoday/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Google from \"../components/Google.jsx\";\r\nimport Facebook from \"../components/Facebook.jsx\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  // const history = useHistory();\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3100/users/login\", {\r\n        username,\r\n        password,\r\n      });\r\n      console.log(response.data);\r\n      if (response.data.success) {\r\n        console.log(\"로그인 성공!\");\r\n        // 로그인 성공 후 처리할 로직 작성\r\n        navigate(\"/MyPage\"); // 내 정보 페이지로 이동\r\n      } else {\r\n        setErrorMessage(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"로그인 요청 실패:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <LoginForm onSubmit={handleSubmit}>\r\n        <LoginTitle>Login</LoginTitle>\r\n        <LoginInput\r\n          type=\"text\"\r\n          placeholder=\"Email ID\"\r\n          value={username}\r\n          onChange={handleUsernameChange}\r\n          required\r\n        />\r\n        <LoginInput\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={handlePasswordChange}\r\n          required\r\n        />\r\n        <>\r\n          <Google />\r\n        </>\r\n        <>\r\n          <Facebook />\r\n        </>\r\n        {/* <input\r\n          type=\"checkbox\"\r\n          name=\"saveEmail\"\r\n          id=\"saveEmail\"\r\n          checked={username}\r\n          // onChange={handleSaveIDFlag}\r\n        />\r\n        <label>\r\n          <span>아이디 저장</span>\r\n        </label> */}\r\n        <LoginButton type=\"submit\" onSubmit={handleSubmit}>\r\n          Login\r\n        </LoginButton>\r\n        {errorMessage && <LoginErrorMessage>{errorMessage}</LoginErrorMessage>}\r\n      </LoginForm>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #000;\r\n  height: 100vh;\r\n`;\r\n\r\nconst LoginForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #5a5858;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst LoginInput = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  font-size: 16px;\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #007bff;\r\n  }\r\n`;\r\n\r\nconst LoginButton = styled.button`\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 3px;\r\n  background-color: #2e2e2e;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst LoginTitle = styled.h1`\r\n  margin-bottom: 30px;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst LoginErrorMessage = styled.p`\r\n  margin-top: 10px;\r\n  color: #dc3545;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport default Login;\r\n\r\n// import React from 'react';\r\n// import styled from 'styled-components';\r\n\r\n// const Login = () => {\r\n//   return (\r\n//     <LoginContainer>\r\n//       <LoginForm>\r\n//         <LoginTitle>로그인</LoginTitle>\r\n//         <LoginInput\r\n//           type=\"text\"\r\n//           placeholder=\"사용자 이름\"\r\n//           required\r\n//         />\r\n//         <LoginInput\r\n//           type=\"password\"\r\n//           placeholder=\"비밀번호\"\r\n//           required\r\n//         />\r\n//         <LoginButton>로그인</LoginButton>\r\n//       </LoginForm>\r\n//     </LoginContainer>\r\n//   );\r\n// };\r\n\r\n// const LoginContainer = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   height: 100vh;\r\n// `;\r\n\r\n// const LoginForm = styled.form`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   width: 400px;\r\n//   background-color: #fff;\r\n//   padding: 30px;\r\n//   border-radius: 5px;\r\n//   box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n// `;\r\n\r\n// const LoginInput = styled.input`\r\n//   width: 100%;\r\n//   padding: 10px;\r\n//   margin-bottom: 10px;\r\n//   border: 1px solid #ccc;\r\n//   border-radius: 3px;\r\n//   font-size: 16px;\r\n//   &:focus {\r\n//     outline: none;\r\n//     border-color: #007bff;\r\n//   }\r\n// `;\r\n\r\n// const LoginButton = styled.button`\r\n//   padding: 10px 20px;\r\n//   border: none;\r\n//   border-radius: 3px;\r\n//   background-color: #007bff;\r\n//   color: #fff;\r\n//   font-size: 16px;\r\n//   cursor: pointer;\r\n// `;\r\n\r\n// const LoginTitle = styled.h1`\r\n//   margin-bottom: 30px;\r\n//   font-size: 24px;\r\n//   font-weight: bold;\r\n// `;\r\n\r\n// export default Login;\r\n\r\n// function onClickGooglelogin() {\r\n//   document.querySelector('[aria-labelledby=\"button-label\"]').click();\r\n// }\r\n\r\n// <button onClick={onClickGooglelogin}> Login </button>\r\n// //로그인 버튼 아직 미완성\r\n\r\n// import React, { useState } from 'react';\r\n// import styled from 'styled-components';\r\n// import { useHistory } from 'react-router-dom';\r\n// import Google from 'C:/Users/namkyun/Desktop/workspace/today/src/components/Google.jsx';\r\n// import Facebook from 'C:/Users/namkyun/Desktop/workspace/today/src/components/Facebook.jsx';\r\n\r\n// const Login = () => {\r\n//   const history = useHistory(); // useHistory 훅 사용\r\n\r\n//   // ...이전 코드 생략...\r\n\r\n//   const handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     // 여기서 서버에 로그인 요청을 보내고 결과를 처리할 수 있습니다.\r\n//     if (username === 'admin' && password === 'admin') {\r\n//       console.log('로그인 성공!');\r\n//       setErrorMessage('');\r\n\r\n//       // 로그인 성공 후 내 정보 페이지로 이동\r\n//       history.push('/profile');\r\n//     } else {\r\n//       setErrorMessage('유효하지 않은 사용자 이름 또는 비밀번호입니다.');\r\n//     }\r\n//   };\r\n\r\n//   // ...이전 코드 생략...\r\n\r\n//   return (\r\n//     // ...이전 코드 생략...\r\n//   );\r\n// };\r\n\r\n// // ...이후 코드 생략...\r\n\r\n// import React, { useState } from 'react';\r\n// import styled from 'styled-components';\r\n// import { useHistory } from 'react-router-dom';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import Google from 'C:/Users/namkyun/Desktop/workspace/today/src/components/Google.jsx';\r\n// import Facebook from 'C:/Users/namkyun/Desktop/workspace/today/src/components/Facebook.jsx';\r\n\r\n// import axios from 'axios';\r\n\r\n// const Login = () => {\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n//   const navigate = useNavigate(); navigate('/ProfileLogin')\r\n//   const history = useHistory();\r\n\r\n//   const handleUsernameChange = (event) => {\r\n//     setUsername(event.target.value);\r\n//   };\r\n\r\n//   const handlePasswordChange = (event) => {\r\n//     setPassword(event.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     // 여기서 서버에 로그인 요청을 보내고 결과를 처리할 수 있습니다.\r\n//     if (username === 'admin' && password === 'admin') {\r\n//       console.log('로그인 성공!');\r\n//       setErrorMessage('');\r\n\r\n//       // 로그인 성공 후 내 정보 페이지로 이동\r\n//       history.push('/profile');\r\n//     } else {\r\n//       setErrorMessage('유효하지 않은 사용자 이름 또는 비밀번호입니다.');\r\n//     }\r\n//   };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}